exit
JWT.decode(token, 'corgis')
token
exit
JWT.decode(token, 'corgis')
JWT.methods
JWT.decode(token, 'corgis')
token
continue
params
exit
decoded_token
decode_token
decode_toekn
exit
JWT.encode(payload, 'Key')
JWT.encode(payload, 'Key', 'HS256')
JWT.encode(payload, 'myKey', 'HS256')
JWT.methods
JWT
payload
exit
user.authenticate(params['password'])
user = User.find_by(username: params['username'])
params
exit
p.title
p
continue
